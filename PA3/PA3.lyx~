#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding iso8859-1
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "courier" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures false
\graphics default
\default_output_format default
\output_sync 1
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 0
\use_package amssymb 0
\use_package cancel 0
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\headheight 0in
\headsep 0in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\align center

\series bold
\size large
CSCE 221 Cover Page
\series default
\size default

\begin_inset Newline newline
\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
First Name
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Last Name 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

UIN
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
User Name 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

E-mail address
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
Please list all sources in the table below including web pages which you
 used to solve or implement the current homework.
 If you fail to cite sources you can get a lower number of points or even
 zero, read more on Aggie Honor System Office website: 
\family typewriter

\begin_inset CommandInset href
LatexCommand href
target "http://aggiehonor.tamu.edu/"
literal "false"

\end_inset


\family default

\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type of sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
People
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web pages (provide URL) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Printed material
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Other Sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
I certify that I have listed all the sources that I used to develop the
 solutions/codes to the submitted work.
\end_layout

\begin_layout Standard
\noindent

\emph on
On my honor as an Aggie, I have neither given nor received any unauthorized
 help on this academic work
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Your Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Date 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
\size larger
Assignment
\begin_inset space ~
\end_inset

3 (100 pts)
\series default
 
\end_layout

\begin_layout Standard
\align center

\series bold
Program: Due March 29 at 11:59 pm 
\end_layout

\begin_layout Standard
\noindent

\series bold
Objectives: Programming
\end_layout

\begin_layout Standard
Write a C++ class to create a binary search tree.
 Your program should empirically calculate the average search cost for each
 node in a tree and output a tree, level by level, in a text format.
\end_layout

\begin_layout Enumerate

\series bold
Programming (80 points)
\series default
.
\end_layout

\begin_deeper
\begin_layout Standard
Write code for a Binary Search Tree implementation and submit it to Mimir.
 The BSTree class already has several functions that you can use in your
 own functions and 
\series bold
you may create additional helper functions if you find them convenient
\series default
.
 You must implement the following operations:
\end_layout

\begin_layout Itemize
Destructor: Deallocates the memory of the tree using the delete keyword
 on each node of the tree.
 This can be done in multiple ways (e.g.
 use a recursive function, BFS or DFS).
\end_layout

\begin_layout Itemize
Copy constructor & assignment operator: given a BSTree object, create a
 copy of the tree without modifying the given tree.
 For the copy assignment operator, you must also check if you are trying
 to copy the tree into itself, in which case you do nothing, or if there
 is a tree in the destination and if so, delete it.
\end_layout

\begin_layout Itemize
Move constructor & assignment operator: given a BSTree object, move the
 contents of the tree in 
\begin_inset Formula $O(1)$
\end_inset

 time, and empty the original tree.
 For the move assignment operator, you must also check if you are trying
 to move the tree into itself, in which case you do nothing, or if there
 is a tree in the destination and if so, delete it.
\end_layout

\begin_layout Itemize
Insert: This function adds a new node to the tree with the value given,
 increments the size of the tree, and returns a pointer to the new node.
 The new node must be given a search cost, which is the number of comparisons
 required for searching a node (i.e.
 the number of comparisons = the search cost for the node = 
\begin_inset Formula $1+$
\end_inset

 the depth of the node).
 Do not use the update_search_costs for this.
 You may assume that all the values inserted are unique.
\end_layout

\begin_layout Itemize
Search: This function returns a pointer to the node of the tree with the
 value given.
 If no node contains such value, return a null pointer.
 You may assume that all the values on the tree are unique.
\end_layout

\begin_layout Itemize
Update search costs: This function updates the search costs for all the
 nodes on the tree.
 The search cost is the number of comparisons required for searching a node
 (i.e.
 the number of comparisons = the search cost for the node = 
\begin_inset Formula $1+$
\end_inset

 the depth of the node).
 Do not call this function when inserting an element as this will hurt the
 time complexity of insertion.
\end_layout

\begin_layout Itemize
Inorder traversal: Traverse and print the nodes of the tree on an inorder
 fashion, i.e.
 first print the left subtree of a node, then the value of the node and
 finally the right subtree.
 If this is done correctly, it should display the values in ascending order.
 Use the output operator for nodes and add a single space between nodes
 and it should have no newlines.
 See the example below for reference.
\end_layout

\begin_layout Itemize
Level-by-level traversal: Traverse and print the nodes of a tree in a level
 by level fashion where each level of the tree is printed on a new line.
 Use the output operator for nodes and add a single space between nodes
 of the same level.
 See the example below for reference.
\end_layout

\begin_layout Standard
In addition to these functions, you must also ensure that there are no memory
 leaks and you must provide a makefile.
 This makefile should create an executable called 
\begin_inset Quotes eld
\end_inset

run-trees
\begin_inset Quotes erd
\end_inset

 and use the BSTree_main.cpp and BSTree.pp source files.
 The files to be sumbitted to Mimir are:
\end_layout

\begin_layout Itemize
BSTree.cpp
\end_layout

\begin_layout Itemize
BSTree.h
\end_layout

\begin_layout Itemize
Makefile (The makefile must use BSTree_main.cpp, but you should NOT include
 it in your Mimir submission.
 The final executable must be called 
\begin_inset Quotes eld
\end_inset

run-trees
\begin_inset Quotes erd
\end_inset

).
\end_layout

\end_deeper
\begin_layout Standard

\series bold
Report (20 points)
\end_layout

\begin_layout Standard
Write a brief report and submit it to Canvas.
 The report should include the following sections:
\end_layout

\begin_layout Enumerate
A description of the assignment objective, how to compile and run your program,
 and an explanation of your program structure (i.e.
 a high level description of the functions or classes in your code).
\end_layout

\begin_layout Enumerate
A brief description of the data structure you create (i.e.
 a theoretical definition of the data structure and the actual data arrangement
 in the classes).
\end_layout

\begin_layout Enumerate
A description of the implementation of
\color black
 (a) individual search cost and (b) average search cost.
 Analyze the time complexity of the functions that (a) calculate the individual
 search cost and (b) 
\color inherit
sum up the search costs over all the nodes.
 The recurrences/runtime functions should be from your functions (insert()
 for an individual search cost).
\end_layout

\begin_layout Enumerate

\series bold
Give an individual search cost in terms of 
\emph on

\begin_inset Formula $n$
\end_inset


\emph default
 using big-O notation
\series default
.
 Analyze and give the average search costs of a perfect binary tree and
 a linear binary tree using big-O notation, assuming that the following
 formulas are true (
\emph on

\begin_inset Formula $n$
\end_inset


\emph default
 denotes the total number of input data).
 To be clear, part 3 asks you to analyze the running time of the functions
 implemented to compute the individual and average search cost, while here
 you must analyze the asymptotic behavior of the values of the search cost
 itself (Hint: depth of the tree affects the individual search cost.)
\end_layout

\begin_deeper
\begin_layout Standard
Formula for perfect binary tree: 
\begin_inset Formula $\sum_{d=0}^{\log_{2}(n+1)-1}2^{d}(d+1)\simeq(n+1)\cdot\log_{2}(n+1)-n$
\end_inset


\end_layout

\begin_layout Standard
Formula for linear binary tree: 
\begin_inset Formula $\sum_{d=1}^{n}d\simeq n(n+1)/2$
\end_inset


\end_layout

\begin_layout Standard
where d represents the depth of the tree.
\end_layout

\end_deeper
\begin_layout Enumerate
Use BSTree_main.cpp to run your code to analyze the data files provided.
 In case you are unable to compile and run code outside of Mimir, contact
 your TA for assistance.
\end_layout

\begin_deeper
\begin_layout Enumerate
The files 
\emph on
1p
\emph default
, 
\emph on
2p
\emph default
, ..., 
\emph on
12p
\emph default
 contain 
\begin_inset Formula $2^{1}-1$
\end_inset

, 
\begin_inset Formula $2^{2}-1$
\end_inset

,..., and 
\begin_inset Formula $2^{12}-1$
\end_inset

 integers respectively.
 The integers make 12 
\series bold
perfect binary trees
\series default
 where all leaves are at the same depth.
 Calculate and record the average search cost for each perfect binary tree.
 
\end_layout

\begin_layout Enumerate
The files 
\emph on
1r
\emph default
, 
\emph on
2
\emph default
r, ..., 
\emph on
12r
\emph default
 contain same number of integers as above.
 The integers are randomly ordered and make 12 
\series bold
random binary trees
\series default
.
 Calculate and record the average search cost for each tree.
 
\end_layout

\begin_layout Enumerate
The files 
\emph on
1l
\emph default
, 
\emph on
2l
\emph default
, ..., 
\emph on
12l
\emph default
 contain same number of integers as above.
 The integers are in increasing order and make 12 
\series bold
linear binary trees
\series default
.
 Calculate and record the average search cost for each tree.
 
\end_layout

\begin_layout Enumerate
Include a table and a plot of the average search costs you obtain.
 The x axis should be the size of the tree and the y axis should be the
 average search cost.
 In your discussions of experimental results, compare the curves of search
 costs with your theoretical analysis that is derived above.
\end_layout

\end_deeper
\begin_layout Standard

\series bold
Examples:
\end_layout

\begin_layout Standard
Input data:
\end_layout

\begin_layout LyX-Code
5
\end_layout

\begin_deeper
\begin_layout LyX-Code
3
\end_layout

\begin_layout LyX-Code
9
\end_layout

\begin_layout LyX-Code
7
\end_layout

\begin_layout LyX-Code

\family typewriter
\color black
10
\end_layout

\begin_layout LyX-Code

\family typewriter
\color black
11
\end_layout

\begin_layout Standard

\family roman
Create a binary search tree and provide information about each node when
 you display the tree.
 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Key
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Search Time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
4
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\family typewriter
\color black
Total number of nodes is 6
\end_layout

\begin_layout Standard

\family roman
The inorder traversal for this particular tree is:
\end_layout

\begin_layout Standard

\family typewriter
3[2] 5[1] 7[3] 9[2] 
\color black
10[3] 11[4]
\end_layout

\end_deeper
\begin_layout LyX-Code
Here The format of each node is value[search time]
\end_layout

\begin_deeper
\begin_layout Standard
Sum of the search cost over all the nodes in the tree is: 
\begin_inset Formula $2+1+3+2{\color{red}{\color{black}+3+4=15}}$
\end_inset

.
 Average search cost: 
\begin_inset Formula ${\color{red}{\color{black}15/6=2.5}}$
\end_inset

.
\end_layout

\begin_layout Standard

\family typewriter
Average search cost is 
\color black
2.5
\end_layout

\begin_layout Standard

\color black
Output the tree level-by-level to a file (missing elements are denoted by
 
\family typewriter
X
\family default
):
\end_layout

\begin_layout Standard

\family typewriter
\color black
5[1]
\end_layout

\begin_layout Standard

\family typewriter
\color black
3[2] 9[2]
\end_layout

\begin_layout Standard

\family typewriter
\color black
X X 7[3] 10[3]
\end_layout

\begin_layout Standard

\family typewriter
\color black
X X X X X X X 11[4] 
\end_layout

\end_deeper
\begin_layout Standard

\series bold
\color black
Hints
\end_layout

\begin_layout Enumerate

\color black
Besides using links/pointers to represent a binary search tree, you may
 store the binary tree in a vector.
 This implementation might be useful, especially for the printing of a tree
 level by level.
\end_layout

\begin_layout Enumerate
You can add your own recursive functions on the header file as long as you
 define them in the cpp file and you don't remove or change any of the functions
 that are defined already on the header.
\end_layout

\begin_layout Enumerate

\color black
You may use the std::queue and std::stack classes to perform BFS or DFS
 repectively
\end_layout

\begin_layout Enumerate

\color black
The pseudocode here is one way of doing the level-by-level function.
 You can create your own version if you find it easier.
 
\end_layout

\begin_deeper
\begin_layout LyX-Code
level_by_level(BinarySearchTree T)
\end_layout

\begin_layout LyX-Code
   Queue q // This queue contains elements from a level and its children
\end_layout

\begin_deeper
\begin_layout LyX-Code
q.enqueue(T.root)
\end_layout

\begin_layout LyX-Code
elementsInLevel = 1 // Elements in the current level
\end_layout

\begin_layout LyX-Code
nonNullChild = false
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
while (elementsInLevel > 0) do:
\end_layout

\begin_layout LyX-Code
    TreeNode* node = q.dequeue()
\end_layout

\begin_layout LyX-Code
    elementsInLevel--
\end_layout

\begin_layout LyX-Code
    if node is not null:
\end_layout

\begin_layout LyX-Code
        print node
\end_layout

\begin_layout LyX-Code
        enqueue the children of node into q
\end_layout

\begin_layout LyX-Code
        if at least one child is not null:
\end_layout

\begin_layout LyX-Code
          nonNullChild = true
\end_layout

\begin_layout LyX-Code
    else:
\end_layout

\begin_layout LyX-Code
        print 'X'
\end_layout

\begin_layout LyX-Code
        enqueue null // these nulls represent the descendants of the empty
 node
\end_layout

\begin_layout LyX-Code
        enqueue null
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
    if elementsInLevel == 0 // We have reached the end of the current level
\end_layout

\begin_layout LyX-Code
        print newline
\end_layout

\begin_layout LyX-Code
        if nonNullChild == true: // The next level is non-empty
\end_layout

\begin_layout LyX-Code
            nonNullChild = false
\end_layout

\begin_layout LyX-Code
            elementsInLevel = q.size
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\noindent
\align left

\family typewriter
\begin_inset VSpace smallskip
\end_inset


\end_layout

\end_body
\end_document
